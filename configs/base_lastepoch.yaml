# Config for single device full finetuning in full_finetune_single_device.py
# using a Llama3 8B model
#
# This config assumes that you've run the following command before launching
# this run:
#   tune download meta-llama/Meta-Llama-3-8B --output-dir /tmp/Meta-Llama-3-8B --hf-token <HF_TOKEN>
#
# The default config uses an optimizer from bitsandbytes. If you do not have it installed,
# you can install it with
#   pip install bitsandbytes
#
# To launch on a single device, run the following command from root:
#   tune run full_finetune_single_device --config llama3/8B_full_single_device
#
# You can add specific overrides through the command line. For example
# to override the checkpointer directory while launching training
# you can run:
#   tune run full_finetune_single_device --config llama3/8B_full_single_device checkpointer.checkpoint_dir=<YOUR_CHECKPOINT_DIR>
#
# This config works only for training on single device.


# Tokenizer
tokenizer:
  _component_: torchtune.models.llama3.llama3_tokenizer
  path: checkpoints/Meta-Llama-3-8B/original/tokenizer.model

# Dataset
dataset:
  _component_: torchtuning.kowiki_dataset
  source: csv
  column: text
  data_files: data/20240520/kowikitext_20240520.csv
  max_seq_len: 1536
  split: train
seed: 31344
shuffle: True

# Model Arguments
model:
  _component_: torchtune.models.llama3.llama3_8b

checkpointer:
  _component_: torchtune.utils.FullModelMetaCheckpointer
  checkpoint_dir: checkpoints/Llama-3-LLaMS-kowiki/
  checkpoint_files: [
    meta_model_4.pt
  ]
  adapter_checkpoint: adapter_4.pt
  recipe_checkpoint: recipe_state.pt
  output_dir: checkpoints/Llama-3-LLaMS-inst-from-base/
  model_type: LLAMA3
resume_from_checkpoint: False

# Fine-tuning arguments
batch_size: 1
epochs: 6
optimizer:
  _component_: torch.optim.AdamW
  weight_decay: 0.01
  lr: 0.0003

lr_scheduler:
  _component_: torchtune.modules.get_cosine_schedule_with_warmup
  num_warmup_steps: 100

loss:
  _component_: torch.nn.CrossEntropyLoss
max_steps_per_epoch: null
gradient_accumulation_steps: 32
optimizer_in_bwd: False
compile: True

# Training environment
device: cuda

# Memory management
enable_activation_checkpointing: False

# Reduced precision
dtype: bf16

# Logging
output_dir: torchtune-llams
metric_logger:
  _component_: torchtune.utils.metric_logging.DiskLogger
  log_dir: /tmp/lora_finetune_output
log_every_n_steps: 5
